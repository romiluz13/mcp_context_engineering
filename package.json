{
  "name": "mcp-context-engineering",
  "description": "ðŸš€ Revolutionary AI Context Engineering Platform via MCP Protocol - Transform static context into dynamic, intelligent, collaborative intelligence for any AI assistant",
  "version": "1.0.0",
  "type": "module",
  "main": "dist/index.js",
  "author": "Rom Iluz <rom@iluz.net>",
  "homepage": "https://github.com/romiluz13/mcp_context_engineering",
  "repository": {
    "type": "git",
    "url": "https://github.com/romiluz13/mcp_context_engineering.git"
  },
  "bin": {
    "mcp-context-engineering": "dist/index.js"
  },
  "keywords": [
    "mcp",
    "model-context-protocol", 
    "context-engineering",
    "ai-assistant",
    "mongodb",
    "dynamic-context",
    "intelligent-context",
    "collaborative-ai",
    "cursor",
    "claude",
    "copilot",
    "windsurf",
    "context-intelligence",
    "pattern-discovery",
    "ai-development",
    "revolutionary",
    "universal-ai",
    "semantic-search",
    "vector-search"
  ],
  "scripts": {
    "start": "node dist/index.js",
    "build": "npm run build:clean && npm run build:compile && npm run build:chmod",
    "build:clean": "rm -rf dist",
    "build:compile": "tsc --project tsconfig.build.json",
    "build:chmod": "chmod +x dist/index.js",
    "dev": "tsx src/index.ts",
    "setup-db": "node scripts/setup-database.js",
    "sample-data": "node scripts/generate-sample-data.js",
    "setup-all": "npm run build && npm run setup-db && npm run sample-data",
    "prepare": "npm run build"
  },
  "dependencies": {
    "mongodb": "^6.15.0",
    "openai": "^4.73.0",
    "@modelcontextprotocol/sdk": "^1.11.2",
    "zod": "^3.24.2"
  },
  "devDependencies": {
    "@types/node": "^22.10.2",
    "typescript": "^5.7.2",
    "tsx": "^4.19.2"
  },
  "engines": {
    "node": ">=18.0.0"
  },
  "license": "Apache-2.0",
  "files": [
    "dist/**/*",
    "scripts/**/*",
    "UNIVERSAL_AI_RULES.md",
    "README.md",
    "LICENSE"
  ]
}
